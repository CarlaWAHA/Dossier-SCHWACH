services:
  db:
    image: postgres:14-alpine
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypass
      POSTGRES_DB: mydb
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    ports:
      - "5432:5432" # Optionnel si besoin d'acc√®s externe

  backend:
    build:
      context: ./Backend
      dockerfile: RoomBookingApi/Dockerfile
    container_name: backend_api
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      ConnectionStrings__Default: "Host=db;Port=5432;Database=mydb;Username=myuser;Password=mypass"
    networks:
      - app_network
    ports:
      - "5000:80"

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: frontend_app
    restart: always
    depends_on:
      - backend
    networks:
      - app_network
    ports:
      - "8081:80"
    volumes:
      - ./Frontend/nginx.conf:/etc/nginx/nginx.conf

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
